DUE JULY 3:

reorganize folder structure and extract things from constants into food system

complete seaweed conversion from daily to monthly and verify returns the correct result.

rerun analysis in november to check on differences in countries affected:

1 2 3 4 5 6 7 8 9 10 11 12
        M            N


maybe not JULY 3:

run with a single global uniform reduction for whole world.



IMPORTS BY COUNTRY:

[done]sort animals by size
[done]meat from chicken and pork
[done]meat from cattle
[done]dairy
[done]food balances -> For later
[done]food balances (meals) -> For later



STRUCTURE:

scenarios
    init

    set waste to zero
    set waste to baseline

    set delays

    etc

    scenario - global baseline
    scenario - global nuclear winter
    scenario - global nuclear winter no resilient foods

    scenarios - country baseline
        called with inputs for that country
    scenarios - country nuclear winter
        called with inputs for that country
    scenarios - country nuclear winter no resilient foods
        called with inputs for that country

parameters (was constants)

    imports all the components

    def infer parameters
        calls components to get all the different values 

components (it's a new folder)
    cellulosic_sugar.py
    methane_scp.py
    meat_and_dairy.py
    fish.py
    greenhouses.py
    seaweed.py
    biofuel.py
    feed.py

    

right now constant's computeConstants(constants) takes constants, including things like ADD_FISH, and spits out the exact thing,
     ADD_FISH = constants["ADD_FISH"]
     ...
     constants["ADD_FISH"] = ADD_FISH

so we will just set params.ADD_FISH to true, then use it in the infer_params function

also, optimizer is resetting values in constants somehow.
better would be that optimizer 

plotter uses is_nuclear_winter...

infer 
returns params_single and params_list 
