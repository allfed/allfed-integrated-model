


or... we could just take total food produced given the excess, calculate calories from animals fed maintained, and subtract the human edible and add the resulting meat to the simulation. If the minimum is below, we take the discepancy, use it as an added value to maintained, and run optimizer again. Stop when within 0.1% of the minimum being at 7.8 billion.

primary_cals - h_e_feed_conversion + cals_meat_maintained = final
h_e_feed_conversion * h_e_to_meat_cals = cals_meat_maintained

final = 7.8
primary_cals = 9.2

====solve====

(9.2-7.8) / (1 - h_e_to_meat_cals) = h_e_feed_conversion 


===more complicated====
human_caloric_consumption => 2100 calories for 7.8 billion people

primary_cals => calories from primary production, including dairy, culled meat, and all other food sources which involve negligable quantities of human-edible food to be maintained

h_e_cals_fed_to_ls => human edible calories fed to livestock. We assign h_e_cals_fed_to_ls as constant over every month to maintain a steady number of h e fed livestock.

ls_cals_maintained => monthly calories from meat maintained from feeding the livestock human edible food

nonculled_init_cals => primary production calories except for culled meat

culled_cals => amount of calories culled from present-day livestock meat at start of ASRS

h_e_feed_ratio => conversion from human edible feed per month in calories to meat calories maintained per month

init_ls_cals => amount of calories in present-day livestock meat

meat_to_ls_ratio => Meat calories produced per month while maintaining the livestock population requires maintaining a certain percentage of present day livestock. meat_to_ls_ratio converts between meat calories per month maintained and total calories represented by consuming that percentage of present-day livestock population all at once.

[1] human_caloric_consumption = 
		sum(primary_cals[m]) - h_e_cals_fed_to_ls + ls_cals_maintained

[2] sum(primary_cals[m]) = sum(nonculled_init_cals[m]) + sum(culled_cals[m])

[3] ls_cals_maintained = h_e_cals_fed_to_ls*h_e_feed_ratio

[4] sum(culled_cals[m]) = init_ls_cals 
		- ls_cals_maintained*meat_to_ls_ratio

init_ls_cals-sum(culled_cals[m]) = ls_cals_maintained*meat_to_ls_ratio


We wish to solve for sum(culled_cals[m]), and use this to estimate primary production.

We have from [1], [2], and [3]:

	[5] human_caloric_consumption =
			sum(nonculled_init_cals[m]) + sum(culled_cals[m])
			 + h_e_cals_fed_to_ls * (-1 + h_e_feed_ratio)

Combining [3] and [4]:

	[6] h_e_cals_fed_to_ls = 
			(init_ls_cals - sum(culled_cals[m]))
			/ (meat_to_ls_ratio*h_e_feed_ratio)

combining [5] and [6]:

	[7] sum(culled_cals[m]) = human_caloric_consumption
			 - sum(nonculled_init_cals[m])
			 - ( (init_ls_cals - sum(culled_cals[m])) 
				 * (-1 + h_e_feed_ratio)
				 / (meat_to_ls_ratio*h_e_feed_ratio) )

let 

	alpha = (-1 + h_e_feed_ratio) / (meat_to_ls_ratio*h_e_feed_ratio)

then

sum(culled_cals[m]) = human_caloric_consumption 
	- sum(nonculled_init_cals[m])
	- init_ls_cals * alpha
	+ sum(culled_cals[m]) * alpha

sum(culled_cals[m]) = ( (human_caloric_consumption
	 - sum(nonculled_init_cal[m])) - init_ls_cals * alpha ) / (1-alpha)

if nonculled_init_cal is steady with time over Nmonths_steady, and nonculled_init_cal is used up entirely over that time:

sum(culled_cals[m])	= ( (human_caloric_consumption
 - nonculled_init_cal[0]*Nmonths_steady) - init_ls_cals * alpha ) / (1-alpha)

Then we have 

variables:

	human_caloric_consumption is current population times 2100 calories

	h_e_feed_ratio is known (chicken and pork conversion), but should assert that this is not higher than current-day chicken and pork.

	meat_to_ls_ratio is known (determined by present-day livestock meat output ratio to present day livestock size times calories meat per animal 

	init_ls_cals is current day livestock times calories per animal

	nonculled_init_cals is the output of running the optimizer without culled meat

nonculled_init_cals[m] is actually dependent on the culled meat, as knowing the livestock levels maintained informs us how the nonculled_init_cals are distributed over time.

We start with a guess at sum(culled_cals[m]), and run the optimizer. This produces some min(human_caloric_consumption[m]) which may be above or below 7.8 billion. 


The goal of the optimization is to allocate production and storage over time to reduce the degree of global famine. Once it is determined that the total calories could be produced above human nutritional requirements, the optimization changes in nature. In this case it is realistic to assume that there will be some excess production which is not consumed directly by humans, and some degree of continuation of the common practice today of feeding human edible food to livestock.

N_can_afford_vegan_diets

Once it is determined that the total calories could be produced above human nutritional requirements, the optimization changes in nature. In this case is a given that there will be enough calories, fat, and protein for everyone, and that there will be some excess calories for which many of the rich will pay much more to have turned into meat.
Unfortunately in the present-day, many of the rich outcompete the poor for human edible food going to livestock. The proper optimization thus becomes not one of producing the most food, but producing food that most people can afford and also meets minimum requirements for fat and protein.
When the cost of food is low enough that the government can afford to subsidize or international food aid can be procured at a reasonable or relatively low price compared to present day, this increases the probability that enough subsidies are delivered to feed most of the world. 
Therefore, the optimizer is run twice, once for low cost diets, and once for animal rich diets.

The first run does not include the most expensive foods - dairy, meat, and seafood. The number N_low_cost fed from the low-cost diets is determined from the number who could have their nutrition met from the low-cost foods.
Then, only fish, dairy, and non-edible-feed-fed-meat are modeled in a second optimization run. The number of people N_high_cost_non_human_edible who could be fed from these meat sources is calculated.

Asserting N_high_cost < 7.8 billion
Assert N_high_cost_non_human_edible < N_can_afford_meat_rich_diets

Calculate the number fed from nonhuman edible -- not low cost, but 100% going to be produced

h_e_cals_fed_to_animals_guess = (N_low_cost + N_high_cost_non_human_edible - (7.8 billion))*2100


This ensures all the nonhuman edible food is produced and paid for, even though it is higher cost, and as many people as possible are also fed low cost foods. The remaining goes to 

If N_low_cost + N_high_cost < 7.8 billion, the program optimizes the combination to meet minimum needs using all foods irrespective of cost.

If N_low_cost + N_high_cost >= 7.8 billion, N_high_cost food is calculated. 
N_high_cost food is strictly lower than culling current livestock.

 to N_can_only_afford_vegan_diets over the months, reducing the supply. The remaining supply goes to those who can afford meat in their diets. In this case, the caloric supply is maximized iteratively. N_combined may be more than N_low_cost, in which case subsidies would be required to feed them. 

 minimum number fed using low cost foods is maximized over time. 

If N_low_cost + N_high_cost >= 7.8 billion, and N_low_cost < 7.8 billion, then the low cost foods are subtracted off the production as they have been consumed by the poor, and the minimum production of remaining sources is N_combined_diets = (7.8 billion) - N_low_cost. 

a combination of the remaining  is subtracted from the low cost food sources and the remaining


and N_low_cost > N_can_afford_vegan_diets, N_meat_rich_diets = (7.8 billion) - N_can_afford_vegan_diets. Then, a combination of the remaining is subtracted from the low cost food sources and the remaining


The maximum number of people that can be fed from low cost foods without subsidies will be N_no_subsidies = (7.8 billion) - N_high_cost. If N_low_cost > N_no_subsidies The number of people actually fed is N_no_subsidies - N_low_cost.


his implies that the low cost foods are above global nutritional requirements, and everyone would be fed with .

We could get around this by setting the dairy, fish, and meat maintained as quite expensive, so the distribution tries its best (without assuming any culled livestock meat distribution) to allocate the cheap food sources to the poor while maintaining their nutritional requirements.

This would be offset by the fact that 

Then, we would have

human_caloric_consumption = 
	primary_cals - h_e_cals_fed_to_ls + ls_cals_maintained + dairy + fish + non_human_edible_fed_meat

nonculled_init_cals


unfortunately,  

constants: human_caloric_consumption, current_ls_cals,meat_to_ls, nonculled_init_cals
easily found: h_e_to_meat_cals = f(h_e_feed_conversion)
determined: h_e_feed_conversion

