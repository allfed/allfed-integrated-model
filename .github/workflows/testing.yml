name: Tests

on:
  # Trigger the workflow on push or pull request,
  # but only for the main branch
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Running Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          
     - name: Set up caching
       uses: actions/cache@v3
       id: cache-proj
       with:
         path: local
         key: proj-${{ runner.os }}-${{ inputs.version }}-0
  
     - name: Download and build PROJ
       shell: bash
       if: steps.cache-proj.outputs.cache-hit != 'true'
       run: |
         mkdir proj-build
         curl https://download.osgeo.org/proj/proj-${{ inputs.version }}.tar.gz | tar xzf - --strip-components=1 -C proj-build
         pushd proj-build
         mkdir build
         cd build
         cmake .. -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/local -DBUILD_SHARED_LIBS=ON -DCMAKE_BUILD_TYPE=Release \
           -DENABLE_IPO=ON -DENABLE_CURL=OFF -DBUILD_CCT:BOOL=OFF -DBUILD_CS2CS:BOOL=OFF -DBUILD_GEOD:BOOL=OFF \
           -DBUILD_GIE:BOOL=OFF -DBUILD_PROJINFO:BOOL=OFF -DBUILD_PROJSYNC:BOOL=OFF -DBUILD_TESTING:BOOL=OFF
         cmake --build . -j6
         cmake --install .
         popd
     - name: Update environment
       shell: bash
       run: |
         echo "CPATH=$CPATH:$GITHUB_WORKSPACE/local/include" >> $GITHUB_ENV
         echo "LIBRARY_PATH=$LIBRARY_PATH:$GITHUB_WORKSPACE/local/lib" >> $GITHUB_ENV
         echo "LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$GITHUB_WORKSPACE/local/lib" >> $GITHUB_ENV
         echo "$GITHUB_WORKSPACE/local/bin" >> $GITHUB_PATH
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install libgeos++-dev libgeos-3.8.0 libgeos-c1v5 libgeos-dev libgeos-doc
          sudo apt-get install proj-bin
          python -m pip install --upgrade pip
          pip install pytest
          pip install -e .
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Test with pytest
        run: |
          pytest

